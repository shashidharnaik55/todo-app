{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filterItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAsCeA,MAjCf,SAAkBC,GAChB,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACE,uBACEC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAU,SAACC,GAAD,OAAOZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAGxD,+BACE,cAAC,IAAD,CACEH,UAAU,UACVU,KAAK,QACLC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAblBJ,EAAKI,QAoBpC,OACE,8BACE,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACGlB,O,eC1BTmB,IAAQC,IAAIC,K,IAsFGC,E,kDAnFb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXtB,MAAO,GACPuB,YAAa,CACXf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAbA,E,+CAgBnB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAa,CACXf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,qBAIhB,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAG3B,GAFAU,QAAQC,IAAIF,GAES,KAAjBA,EAAQxB,KAAa,CACvB,IAAM2B,EAAQ,sBAAOR,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACvCL,KAAKC,SAAS,CACZ5B,MAAOmC,EACPZ,YAAa,CACXf,KAAM,GACNF,IAAK,S,wBAMb,SAAWA,GACT,IAAM8B,EAAcT,KAAKL,MAAMtB,MAAMqC,QAAO,SAACnC,GAAD,OAAUA,EAAKI,MAAQA,KACnEqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,uBAGX,SAAU5B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAACC,GACLA,EAAKI,MAAQA,IACfJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAOA,M,oBAGX,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,mCACE,2CACA,uBAAME,GAAG,YAAYiC,SAAUX,KAAKD,QAApC,UACE,uBACEtB,KAAK,OACLmC,YAAY,aACZhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cAEjB,wBAAQpB,KAAK,SAAb,uBAGJ,cAAC,EAAD,CACEJ,MAAO2B,KAAKL,MAAMtB,MAClBe,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,mB,GA7ER6B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d589c654.chunk.js","sourcesContent":["import React from 'react'\nimport './ListItem.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move'\n\nfunction ListItem(props) {\n  const items = props.items\n  const listItems = items.map((item) => {\n    return (\n      <div className=\"list\" key={item.key}>\n        <p>\n          <input\n            type=\"text\"\n            id={item.key}\n            value={item.text}\n            onChange={(e) => props.setUpdate(e.target.value, item.key)}\n          />\n\n          <span>\n            <FontAwesomeIcon\n              className=\"faicons\"\n              icon=\"trash\"\n              onClick={() => props.deleteItem(item.key)}\n            />\n          </span>\n        </p>\n      </div>\n    )\n  })\n  return (\n    <div>\n      <FlipMove duration={500} easing=\"ease-in-out\">\n        {listItems}\n      </FlipMove>\n    </div>\n  )\n}\n\nexport default ListItem\n","import React from 'react'\nimport './App.css'\nimport ListItem from './ListItem'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: '',\n      },\n    }\n    this.handleInput = this.handleInput.bind(this)\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.setUpdate = this.setUpdate.bind(this)\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    })\n  }\n  addItem(e) {\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    console.log(newItem)\n\n    if (newItem.text !== '') {\n      const newItems = [...this.state.items, newItem]\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: '',\n        },\n      })\n    }\n  }\n\n  deleteItem(key) {\n    const filterItems = this.state.items.filter((item) => item.key !== key)\n    this.setState({\n      items: filterItems,\n    })\n  }\n  setUpdate(text, key) {\n    const items = this.state.items\n    items.map((item) => {\n      if (item.key === key) {\n        item.text = text\n      }\n    })\n    this.setState({\n      items: items,\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h2>Todo List</h2>\n          <form id=\"todo-form\" onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            ></input>\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <ListItem\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}